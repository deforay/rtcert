<?php

use Zend\Debug\Debug;
use Zend\Session\Container;
$sessionLogin = new Container('credo');
// Debug::dump($provider);die;
$config = new \Zend\Config\Reader\Ini();
$configResult = $config->fromFile(CONFIG_PATH . '/custom.config.ini');
$pathname = $configResult['domain'].'/uploads' . DIRECTORY_SEPARATOR . "tester-proile" . DIRECTORY_SEPARATOR . $this->id . DIRECTORY_SEPARATOR . 'pic'
?>
<link rel="stylesheet" type="text/css" href="<?php echo $this->basePath('assets/lib/select2/css/select2.min.css'); ?>"/>
<link rel="stylesheet" type="text/css" href="<?php echo $this->basePath('assets/css/dataTables.bootstrap.min.css'); ?>"/>
<link rel="stylesheet" href="<?php echo $this->basePath('assets/css/daterangepicker-bs3.css'); ?>" type="text/css"/>
<link rel="stylesheet" href="<?php echo $this->basePath('assets/css/jquery.multiselect.css'); ?>" type="text/css"/>
<script src="<?php echo $this->basePath('assets/js/jquery.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/jquery-ui.min.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/jquery.multiselect.js'); ?>" type="text/javascript"></script>

<div class="am-content">
    <div class="page-head">
        <h2>Edit Tester</h2>
        <span class="muted pull-right" style="font-size:15px;"><span class="mandatory">*</span> indicates required field</span>
    </div>
    <div class="main-content">
        <div class="widget widget-fullwidth widget-small" style="padding:5px;">
            <div class="row">
                <div class="col-sm-12">
                    <div class="panel panel-default">
                        <div class="panel-body" >
                            <form action="<?php $this->url('provider', array('action' => 'edit', 'id' => $this->id)); ?>" name="form" method="post" onsubmit="return validateForm()" enctype="multipart/form-data">
                                <?php
                                $form->prepare();
                                $form->get('professional_reg_no')->setAttributes([
                                    'class' => 'form-control professional_reg_no',
                                    'placeholder' => 'Professional Registration No ',
                                    'autocomplete' => 'off',
                                    'onclick' => 'emptyInput(this)',
                                    'onblur' => 'checkNameValidation("provider","professional_reg_no", this, "id##'.$this->id.'", "The professional reg.no that you entered already exist..Please enter different reg.no")'
                                ]);
                                $form->get('last_name')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Last Name',
                                    'autocomplete' => 'off',
                                    'id' => 'Last Name',
                                    'onclick' => 'emptyInput(this)',
                                ]);

                                $form->get('first_name')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'First name',
                                    'autocomplete' => 'off',
                                    'id' => 'First Name',
                                    'onclick' => 'emptyInput(this)',
                                ]);

                                $form->get('middle_name')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Middle name',
                                    'id' => 'Middle Name',
                                    'autocomplete' => 'off',
                                    'onclick' => 'emptyInput(this)'
                                ]);
                                
                                $form->get('country')->setAttributes([
                                    'class' => 'form-control',
                                    'id' => 'Country',
                                    'onclick' => 'emptyInput(this)',
                                    'onchange' => 'showRegion(this.value,"","change")',
                                ]);
                                
                                $form->get('region')->setAttributes([
                                    'class' => 'form-control',
                                    'id' => 'Region',
                                    'onclick' => 'emptyInput(this)',
                                    'onchange' => 'showDistrict(this.value,"","change")',
                                ]);
                                
                                $form->get('district')->setAttributes([
                                    'class' => 'form-control',
                                    'id' => 'District',
                                    'onclick' => 'emptyInput(this)',
                                    'onchange' => 'showFacilities(this.value)',
                                ]);

                                $form->get('type_vih_test')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Type of HIV Test',
                                    'id' => 'Type of HIV Test Modality/Point',
                                    'onclick' => 'emptyInput(this)']);

                                $form->get('phone')->setAttributes([
                                    'class' => 'form-control checkNum',
                                    'placeholder' => 'Phone',
                                    'id' => 'Tester Phone Number',
                                    'autocomplete' => 'off',
                                    'onclick' => 'emptyInput(this)',
                                    'onblur' => 'checkNameValidation("provider","phone", this, "id##'.$this->id.'", "The phone no. that you entered already exist..Please enter different phone no.")'
                                ]);
                                $form->get('email')->setAttributes([
                                    'class' => 'form-control testerEmail',
                                    'placeholder' => 'Email',
                                    'autocomplete' => 'off',
                                    'id' => 'Tester Email',
                                    'onclick' => 'emptyInput(this)',
                                    'onblur' => 'checkNameValidation("provider","email", this, "id##'.$this->id.'", "The email address that you entered already exist..Please enter different email address")'
                                ]);

                                $form->get('prefered_contact_method')->setAttributes([
                                    'class' => 'form-control preferedContactMethod',
                                    'placeholder' => 'Prefered Contact Method',
                                    'id' => 'Prefered Contact Method',
                                    'onclick' => 'emptyInput(this)',
                                    'onchange' => 'managePreferedContactEmail()'
                                ]);

                                $form->get('current_jod')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Current Job',
                                    'id' => 'Current Job Title',
                                    'onclick' => 'emptyInput(this)']);

                                $form->get('time_worked')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Time worked as tester',
                                    'autocomplete' => 'off',
                                    'id' => 'Time worked as tester',
                                    'onclick' => 'emptyInput(this)']);

                                $form->get('username')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Username for login',
                                    'autocomplete' => 'off',
                                    'id' => 'Username',
                                    'onclick' => 'emptyInput(this)']);
                                
                                $form->get('password')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Password for login',
                                    'autocomplete' => 'off',
                                    'id' => 'Password',
                                    'onclick' => 'emptyInput(this)']);

                                $form->get('test_site_in_charge_name')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Name',
                                    'autocomplete' => 'off',
                                    'id' => 'Testing site in charge Name',
                                    'onclick' => 'emptyInput(this)']);

                                $form->get('test_site_in_charge_phone')->setAttributes([
                                    'class' => 'form-control checkNum',
                                    'placeholder' => 'Phone',
                                    'id' => 'Testing site in charge Phone',
                                    'autocomplete' => 'off',
                                    'onclick' => 'emptyInput(this)']);

                                $form->get('test_site_in_charge_email')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Email',
                                    'autocomplete' => 'off',
                                    'id' => 'Testing site in charge Email',
                                    'onclick' => 'emptyInput(this)']);

                                $form->get('facility_in_charge_name')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Name',
                                    'autocomplete' => 'off',
                                    'id' => 'Facility in charge Name',
                                    'onclick' => 'emptyInput(this)']);

                                $form->get('facility_in_charge_phone')->setAttributes([
                                    'class' => 'form-control checkNum',
                                    'placeholder' => 'Phone',
                                    'autocomplete' => 'off',
                                    'id' => 'Facility in charge Phone',
                                    'onclick' => 'emptyInput(this)']);

                                $form->get('facility_in_charge_email')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Email',
                                    'autocomplete' => 'off',
                                    'id' => 'Facility in charge Email',
                                    'onclick' => 'emptyInput(this)']);

                                $form->get('facility_id')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Facility Name',
                                    'id' => 'Facility Name',
                                    'onclick' => 'emptyInput(this)',
                                    //'options' => [$this->facility_id => $this->facility_name]
                                ]);
                                $form->get('profile_picture')->setAttributes([
                                    'class' => 'form-control',
                                    'placeholder' => 'Upload Profile Picture',
                                    'id' => 'Profile Picture',
                                ]);


                                $form->get('submit')->setAttributes([
                                ]);


                                echo $this->form()->openTag($form);
                                ?>
                                <?php echo $this->formHidden($form->get('id')->setAttribute('class', 'form-control')) ?>

                                <fieldset>
                                    <legend style="color: #00b3ee">TESTER IDENTIFICATION</legend>
                                    <div class="form-group col-lg-4"> 
                                        <?= $this->formLabel($form->get('professional_reg_no')); ?>
                                        <?= $this->formElement($form->get('professional_reg_no')); ?>
                                        <?= $this->formElementErrors($form->get('professional_reg_no')); ?>
                                    </div>
                                    <div class="form-group col-lg-4"> 
                                        <img src="<?php echo $pathname.DIRECTORY_SEPARATOR.$this->profile_picture;?>" class="rounded float-left hide-img" alt="Profile picture" width="70" style=" background: lightgray; padding: 10px; border-radius: 15px; "/>
                                        <span class="mandatory hide-img" onclick="showFile();" style=" padding: 0px 5px;background: antiquewhite;border-radius: 50%;cursor: pointer;position: absolute;left: 69px; ">x</span>
                                        <div class="show-file" style="display: none;">
                                            <?= $this->formLabel($form->get('profile_picture')); ?>
                                            <?= $this->formFile($form->get('profile_picture')); ?>
                                            <?= $this->formElementErrors($form->get('profile_picture')); ?>
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-4"> 
                                        <?= $this->formLabel($form->get('last_name')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('last_name')); ?>
                                        <?= $this->formElementErrors($form->get('last_name')); ?>
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('first_name')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('first_name')); ?>
                                        <?= $this->formElementErrors($form->get('first_name')); ?>
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('middle_name')); ?>
                                        <?= $this->formElement($form->get('middle_name')); ?>
                                        <?= $this->formElementErrors($form->get('middle_name')); ?>
                                    </div>
                                    <div class="form-group col-lg-4" style="display:none;">
                                        <?= $this->formLabel($form->get('country')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('country')); ?>
                                        <?= $this->formElementErrors($form->get('country')); ?>
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('region')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('region')); ?>
                                        <?= $this->formElementErrors($form->get('region')); ?>
                                    </div>

                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('district')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('district')); ?>
                                        <?= $this->formElementErrors($form->get('district')); ?></div>

                                    <div class="form-group col-lg-4">  
                                        <?= $this->formLabel($form->get('type_vih_test')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('type_vih_test')); ?>
                                        <?= $this->formElementErrors($form->get('type_vih_test')); ?>
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('phone')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('phone')); ?>
                                        <?= $this->formElementErrors($form->get('phone')); ?>
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('email')); ?><span class="mandatory testerEmailMandatorySection" style="display:none;">*</span>
                                        <?= $this->formElement($form->get('email')); ?>
                                        <?= $this->formElementErrors($form->get('email')); ?>
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('prefered_contact_method')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('prefered_contact_method')); ?>
                                        <?= $this->formElementErrors($form->get('prefered_contact_method')); ?>       
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('current_jod')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('current_jod')); ?>
                                        <?= $this->formElementErrors($form->get('current_jod')); ?>
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('facility_id')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('facility_id')); ?>
                                        <?= $this->formElementErrors($form->get('facility_id')); ?>
                                    </div>


                                    <div class = " form-group col-lg-4">
                                        <div class = "input-group">
                                            <?= $this->formLabel($form->get('time_worked')); ?><span class="mandatory">*</span>
                                            <?= $this->formElement($form->get('time_worked')); ?>
                                            <?= $this->formElementErrors($form->get('time_worked')); ?>
                                            <div class = "input-group-btn">
                                                <select class="form-control" style="margin-bottom: -28px; width: 100px;" name="select_time" id="Time" onclick = 'emptyInput(this)'> 
                                                    <option value="">--Select--</option>
                                                    <option id="Years" value="Years">Year(s)</option>
                                                    <option id="Months" value="Months">Month(s)</option>
                                                    <option id="Weeks"value="Weeks">Week(s)</option>
                                                    <option id="Days" value="Days">Day(s)</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('username')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('username')); ?>
                                        <?= $this->formElementErrors($form->get('username')); ?>
                                    </div>
                                    
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('password')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('password')); ?>
                                        <?= $this->formElementErrors($form->get('password')); ?>
                                    </div>
                                </fieldset>

                                <fieldset>


                                    <legend style="color: #00b3ee">TESTING SITE IN CHARGE</legend>


                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('test_site_in_charge_name')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('test_site_in_charge_name')); ?>
                                        <?= $this->formElementErrors($form->get('test_site_in_charge_name')); ?>
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('test_site_in_charge_phone')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('test_site_in_charge_phone')); ?>
                                        <?= $this->formElementErrors($form->get('test_site_in_charge_phone')); ?>
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('test_site_in_charge_email')); ?>
                                        <?= $this->formElement($form->get('test_site_in_charge_email')); ?>
                                        <?= $this->formElementErrors($form->get('test_site_in_charge_email')); ?>
                                    </div>
                                </fieldset>

                                <fieldset>
                                    <legend style="color: #00b3ee">FACILITY IN CHARGE </legend>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('facility_in_charge_name')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('facility_in_charge_name')); ?>
                                        <?= $this->formElementErrors($form->get('facility_in_charge_name')); ?>
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('facility_in_charge_phone')); ?><span class="mandatory">*</span>
                                        <?= $this->formElement($form->get('facility_in_charge_phone')); ?>
                                        <?= $this->formElementErrors($form->get('facility_in_charge_phone')); ?>
                                    </div>
                                    <div class="form-group col-lg-4">
                                        <?= $this->formLabel($form->get('facility_in_charge_email')); ?>
                                        <?= $this->formElement($form->get('facility_in_charge_email')); ?>
                                        <?= $this->formElementErrors($form->get('facility_in_charge_email')); ?>
                                    </div>
                                </fieldset>

                                <fieldset>
                                    <legend style="color: #00b3ee"></legend>
                                    <div class="form-group col-lg-4" style="margin-top: 30px"><?php echo $this->formSubmit($form->get('submit')->setAttribute('class', 'btn  btn-space btn-primary')); ?>
                                    <a class="btn  btn-space btn-default" role="button" href="<?php echo $this->url('provider', array('action' => 'index')); ?>" >CANCEL</a> </div>
                                </fieldset>
                                <?php echo $this->form()->closeTag();
                                ?>                         
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br>
        <br>
    </div>
</div>

</script>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDhZa4hDifE6p2sbaxJehS7gcrZOJScIqM&libraries=drawing,geometry,places"></script>

<script src="<?php echo $this->basePath('assets/js/maplace.min.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/lib/select2/js/select2.min.js'); ?>" type="text/javascript"></script>


<script src="<?php echo $this->basePath('assets/js/highcharts.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/highcharts-more.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/pattern-fill.js'); ?>"></script>

<script type="text/javascript" src="<?php echo $this->basePath('assets/js/jquery.dataTables.min.js'); ?>"></script>
<script type="text/javascript" src="<?php echo $this->basePath('assets/js/dataTables.bootstrap.min.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/daterangepicker.js'); ?>" type="text/javascript"></script>
<script>
    var time = "<?php echo $time2; ?>";
</script>
<script type="text/javascript" src="<?php echo $this->basePath('assets/js/personnel_certification/provider.js'); ?>"></script>

<script>
    //document.getElementById("Region").addEventListener("load", showDistrict(document.getElementById("Region").value));
    $(document).ready(function () {
        setCountrySelection('<?php echo $this->country_id; ?>');
        showRegion('<?php echo $this->country_id; ?>','<?php echo $this->region_id; ?>','load');
        showDistrict('<?php echo $this->region_id; ?>','<?php echo $this->district_id; ?>','load');
        showFacilities('<?php echo $this->district_id; ?>','<?php echo $this->facility_id; ?>','load');
        managePreferedContactEmail();
    });
    
    function setCountrySelection(ID){
        $.post("<?php echo $this->url('provider', array('action' => 'set-country-selection')); ?>", {id: ID},
            function(data) {
               document.getElementById("Country").innerHTML = data;
            });
        //if (ID == "") {
        //    document.getElementById("Country").innerHTML = "Please Choose a Country";
        //    return;
        //}else {
        //    if (window.XMLHttpRequest) {
        //        // code for IE7+, Firefox, Chrome, Opera, Safari
        //        xmlhttp = new XMLHttpRequest();
        //    } else {
        //        // code for IE6, IE5
        //        xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
        //    }
        //    xmlhttp.onreadystatechange = function () {
        //        if (this.readyState == 4 && this.status == 200) {
        //            document.getElementById("Country").innerHTML = this.responseText;
        //        }
        //    };
        //    xmlhttp.open("GET", "< ?php echo $this->url('provider', array('action' => 'set-country-selection')); ?>?id=" + ID, true);
        //    xmlhttp.send();
        //}
    }
    
    function showRegion(str,ID,frmSrc) {
        if(str == "") {
            document.getElementById("Region").innerHTML = "<option value=''>Please Choose a Country First</option>";
            document.getElementById("District").innerHTML = "<option value=''>Please Choose a Region First</option>";
            document.getElementById("Facility Name").innerHTML = "<option value=''>Please Choose a District First</option>";
           return false;
        }else{
            $.post("<?php echo $this->url('provider', array('action' => 'region')); ?>", {q: str,id:ID},
                function(data) {
                   document.getElementById("Region").innerHTML = data;
                   if(frmSrc == 'change'){
                        document.getElementById("District").innerHTML = "<option value=''>Please Choose a Region First</option>";
                        document.getElementById("Facility Name").innerHTML = "<option value=''>Please Choose a District First</option>";
                   }
                });
        }
        //if (str == "") {
        //    document.getElementById("Region").innerHTML = "Please Choose a Country First";
        //    return;
        //} else {
        //    if (window.XMLHttpRequest) {
        //        // code for IE7+, Firefox, Chrome, Opera, Safari
        //        xmlhttp = new XMLHttpRequest();
        //    } else {
        //        // code for IE6, IE5
        //        xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
        //    }
        //    xmlhttp.onreadystatechange = function () {
        //        if (this.readyState == 4 && this.status == 200) {
        //            document.getElementById("Region").innerHTML = this.responseText;
        //            if(frmSrc == 'change'){
        //                document.getElementById("District").innerHTML = "<option value=''>Please Choose a Region First</option>";
        //                document.getElementById("Facility Name").innerHTML = "<option value=''>Please Choose a District First</option>";
        //            }
        //        }
        //    };
        //    xmlhttp.open("GET", "< ?php echo $this->url('provider', array('action' => 'region')); ?>?q=" + str+'&id='+ID, true);
        //    xmlhttp.send();
        //}
    }
    
    function showDistrict(str,ID,frmSrc) {
        if (str == "") {
            document.getElementById("District").innerHTML = "Please Choose a Region First";
            return;
        } else {
            if (window.XMLHttpRequest) {
                // code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
            } else {
                // code for IE6, IE5
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    document.getElementById("District").innerHTML = this.responseText;
                    if(frmSrc == 'change'){
                        document.getElementById("Facility Name").innerHTML = "<option value=''>Please Choose a District First</option>";
                    }
                }
            };
            xmlhttp.open("GET", "<?php echo $this->url('provider', array('action' => 'district')); ?>?q=" + str+'&id='+ID, true);
            xmlhttp.send();
        }
    }

    function showFacilities(str,ID) {
        if (str == "") {
            document.getElementById("Facility Name").innerHTML = "Please Choose a District First";
            return;
        } else {
            if (window.XMLHttpRequest) {
                // code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
            } else {
                // code for IE6, IE5
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    document.getElementById("Facility Name").innerHTML = this.responseText;
                }
            };
            xmlhttp.open("GET", "<?php echo $this->url('provider', array('action' => 'facility')); ?>?q=" + str+'&id='+ID, true);
            xmlhttp.send();
        }
    }
    
    function managePreferedContactEmail(){
        if($.trim($('.preferedContactMethod').val()) == 'Email'){
           $('.testerEmailMandatorySection').show();
        }else{
           $('.testerEmailMandatorySection').hide();
        }
    }
    
    function checkNameValidation(tableName, fieldName, obj, fnct, msg){
        var className = $(obj).attr('class').split(' ')[1];
        var checkValue = $('.'+className).val();
        if($.trim(checkValue)!= ''){
            $.post("<?php echo $this->url('common', array('action' => 'index')); ?>", {tableName: tableName, fieldName: fieldName, value: checkValue, fnct: fnct},
            function(data) {
                if (data > 0){
                    alert(msg);
                    duplicateName = false;
                    $('.'+className).val('');
                }else {
                    duplicateName = true;
                }
            });
        }
    }

    function showFile(){
        $('.hide-img').hide();
        $('.show-file').show();
    }
</script>