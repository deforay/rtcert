<?php

use Laminas\Session\Container;

$sessionLogin = new Container('credo');
$role = $sessionLogin->roleCode;
if (($this->isAllowed($role, 'Certification\Controller\PracticalExamController', 'edit')) && ($this->isAllowed($role, 'Certification\Controller\PracticalExamController', 'delete'))) {
    $editAction = ' {"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center",bSortable:false},{"sClass":"center",bSortable:false},{"sClass":"center",bSortable:false}';
}elseif ($this->isAllowed($role, 'Certification\Controller\PracticalExamController', 'edit')) {
    $editAction = ' {"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center",bSortable:false},{"sClass":"center",bSortable:false}';
}elseif ($this->isAllowed($role, 'Certification\Controller\PracticalExamController', 'delete')) {
    $editAction = ' {"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center",bSortable:false}';
}else{
    $editAction = ' {"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"},{"sClass":"center"}';
}

$alertMsg = '';
if ($nombre != null) {
    $nombreArray = explode('##', $nombre);
    if (count($nombreArray) > 1) {
        $alertMsg = '<span>Last Certificate for <strong>' . $nombreArray[1] . '</strong> was issued on ' . $nombreArray[2] . ' You can do re-certification only after ' . $nombreArray[3] . ' or before ' . $nombreArray[4] . '</span>';
    } else {
        $nombre = null;
    }
}
?>
<link rel="stylesheet" type="text/css" href="<?php echo $this->basePath('assets/lib/select2/css/select2.min.css'); ?>" />
<link rel="stylesheet" type="text/css" href="<?php echo $this->basePath('assets/css/dataTables.bootstrap.min.css'); ?>" />
<link rel="stylesheet" href="<?php echo $this->basePath('assets/css/daterangepicker-bs3.css'); ?>" type="text/css" />

<link rel="stylesheet" href="<?php echo $this->basePath('assets/css/jquery.multiselect.css'); ?>" type="text/css" />
<link rel="stylesheet" href="<?php echo $this->basePath('assets/css/jquery-ui.css'); ?>" type="text/css"/>

<script src="<?php echo $this->basePath('assets/js/jquery-1.12.4.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/jquery-ui.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/jquery.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/jquery-ui.min.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/jquery.multiselect.js'); ?>" type="text/javascript"></script>
<style type="text/css">
    .select2-container--default .select2-selection--single .select2-selection__arrow b:after {
        content: "" !important;
        font-family: 'Stroke 7';
        font-size: 28px;
        font-weight: normal;
        line-height: 42px;
        color: #777777;
    }

    .select2-container .select2-selection--single {
        height: 42px;
    }

    .select2-container--default .select2-selection--single .select2-selection__arrow {
        height: 26px;
        position: absolute;
        top: 10px;
        right: 1px;
        width: 20px;
    }
</style>
<div class="am-content">
    <div class="page-head">

        <div class="row">
            <div class="col-sm-8">
                <h2>Practical Exam</h2>
            </div>
            <div class="col-sm-4 ">
                <?php // if ($this->isAllowed($role, 'Application\Controller\FacilityController', 'add')) {
                ?>
                <a href="<?php echo $this->url('practical-exam', array('action' => 'index')); ?>" class="btn btn-success pull-right" style="margin-left: 5px;"><i class="fa fa-list"></i>&nbsp;List of Practicals Exams</a>
                <?php // }
                ?>

            </div>
        </div>
        <div class="row">
            <span class="muted pull-right" style="font-size:15px;padding-left:10px;color: darkgray;">(Please ensure that the tester is <a href="/provider/">enrolled</a> before you record the Written Exam results)</span>
            <span class="muted pull-right" style="font-size:15px;">
                <span class="mandatory">*</span> indicates required field
                &nbsp;&nbsp;&nbsp;&nbsp;
                <span class="mandatory" style="color: green;">*</span> indicates read only field
            </span>
        </div>
    </div>

    <div class="main-content">
        <div class="widget widget-fullwidth widget-small" style="padding:5px;">
            <div class="row">
                <div class="col-sm-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <form action="<?php $this->url('practical-exam', array('action' => 'add')); ?>" method="POST" name="form" onsubmit="return validateForm()">
                                <?php
                                $form->prepare();
                                $form->get('exam_type')->setAttributes([
                                    'class' => 'form-control',
                                    'id' => 'Type of Exam',
                                    'autocomplete' => 'off',
                                    'onclick' => 'emptyInput(this)',
                                ]);

                                $form->get('exam_admin')->setAttributes([
                                    'class' => 'form-control',
                                    'id' => 'Exam Administrator',
                                    'autocomplete' => 'off',
                                    'placeholder' => 'Please enter examination admin name',
                                    'onclick' => 'emptyInput(this)',
                                ]);
                                $form->get('provider_id')->setAttributes([
                                    'class' => 'form-control ',
                                    'id' => 'Tester',
                                    'onclick' => 'emptyInput(this)',
                                    'onchange' => 'showAttempt(this.value)'
                                ]);

                                $form->get('direct_observation_score')->setAttributes([
                                    'class' => 'form-control',
                                    'autocomplete' => 'off',
                                    'id' => 'Direct Observation Score',
                                    'placeholder' => 'Please enter direct observation score in %',
                                    'onclick' => 'emptyInput(this)',
                                ]);


                                $form->get('Sample_testing_score')->setAttributes([
                                    'class' => 'form-control',
                                    'autocomplete' => 'off',
                                    'id' => 'Sample Testing Score',
                                    'placeholder' => 'Please enter sample testing score in %',
                                    'onclick' => 'emptyInput(this)',
                                ]);

                                $form->get('date')->setAttributes([
                                    'class' => 'form-control',
                                    'autocomplete' => 'off',
                                    'id' => 'date',
                                    'placeholder' => 'Please select a date',
                                    'onclick' => 'emptyInput(this)',
                                ]);

                                $form->get('training_id')->setAttributes([
                                    'class' => 'form-control',
                                    'id' => 'TrainingId',
                                    'autocomplete' => 'off',
                                    'placeholder' => 'Please enter Trainig name',
                                    'onclick' => 'emptyInput(this)',
                                ]);

                                $form->get('written')->setAttributes([
                                    'value' => $this->written,
                                ]);

                                echo $this->form()->openTag($form);
                                ?>
                                <?php echo $this->formHidden($form->get('practice_exam_id')->setAttribute('class', 'form-control')) ?>
                                <div class="form-group col-lg-12" id="alertMsg"><?php echo $alertMsg; ?></div>
                                <div class="form-group col-lg-6">
                                    <?= $this->formLabel($form->get('provider_id')); ?><span class="mandatory">*</span>
                                    <?= $this->formElement($form->get('provider_id')); ?>
                                    <?php // $this->formElementErrors($form->get('provider_id'));
                                    ?>
                                </div>
                                <div class="form-group col-lg-6">
                                    <?= $this->formLabel($form->get('exam_type')); ?><span class="mandatory" style="color: green;">*</span>
                                    <?= $this->formElement($form->get('exam_type')); ?>
                                    <?php // $this->formElementErrors($form->get('exam_type'));
                                    ?>
                                </div>
                                <div class="form-group col-lg-6">
                                    <?= $this->formLabel($form->get('exam_admin')); ?><span class="mandatory">*</span>
                                    <?= $this->formElement($form->get('exam_admin')); ?>
                                    <?php // $this->formElementErrors($form->get('exam_admin'));
                                    ?>
                                </div>

                                <div class="form-group col-lg-6">
                                    <?= $this->formLabel($form->get('direct_observation_score')); ?><span class="mandatory">*</span>
                                    <?= $this->formElement($form->get('direct_observation_score')); ?>
                                    <?php // $this->formElementErrors($form->get('direct_observation_score'));
                                    ?>
                                </div>

                                <div class="form-group col-lg-6">
                                    <?= $this->formLabel($form->get('Sample_testing_score')); ?><span class="mandatory">*</span>
                                    <?= $this->formElement($form->get('Sample_testing_score')); ?>
                                    <?php // $this->formElementErrors($form->get('Sample_testing_score'));
                                    ?>
                                </div>
                                <div class="form-group col-lg-6">
                                    <?= $this->formLabel($form->get('date')); ?><span class="mandatory">*</span>
                                    <?= $this->formElement($form->get('date')); ?>
                                    <?php // $this->formElementErrors($form->get('date'));
                                    ?>
                                </div>
                                <div class="form-group col-lg-6">
                                    <?= $this->formLabel($form->get('training_id')); ?>
                                    <?= $this->formElement($form->get('training_id')); ?>
                                    <?php // $this->formElementErrors($form->get('training_id'));
                                    ?>
                                </div>
                                <?php // echo $this->formRow($form->get('written'))
                                ?>

                                <div class="row col-sm-3" style="margin-top: 30px; margin-left: 5px"><?php echo $this->formSubmit($form->get('submit')->setAttribute('class', 'btn  btn-space btn-primary')); ?>
                                    <a class="btn  btn-space btn-default" role="button" href="<?php echo $this->url('practical-exam', array('action' => 'index')); ?>">CANCEL</a>
                                </div>

                                <?php echo $this->form()->closeTag();
                                ?>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br>
        <br>
        <div class="widget widget-fullwidth widget-small" style="padding:10px;padding-top:20px; ">

            <h1>List of Practical Exams </h1><br>
            <div class="row">
                <div class="col-sm-3">
                    <div class="col-md-3" style="margin-top:10px;">
                        <lable>Display</label>
                    </div>
                    <div class="col-md-9">
                        <select name="display" class="form-control" id="display">
                            <option value="yes">Not Recommended/Pending</option>
                            <option value="no">Recommended/Certified</option>
                        </select>
                    </div>
                </div>
                <div class="col-sm-5" style="margin-top:10px; align:center">
                    <input type="button" onclick="searchRequestData();" value="Search" class="btn btn-primary btn-sm">
                    <a class="btn  btn-sm btn-danger" role="button" href="/practical-exam">Reset</a>
                </div>
            </div><br>
            <table id="practicalExamsTable" class="datatables table table-bordered table-condensed table-striped table-hover table-fw-widget">
                <thead>
                    <tr>
                        <th style="width: 200px;">Tester </th>
                        <th style="width: 70px;">Date</th>
                        <th>No. of Attempts</th>
                        <th>Exam Administrator</th>
                        <th>Direct Observation Score (≥90%) </th>
                        <th>Sample Testing Score (=100%)</th>
                        <th>Practical Total Score</th>
                        <?php if ($this->isAllowed($role, 'Certification\Controller\PracticalExamController', 'edit')) { ?>
                            <th>Edit</th>
                            <th style="width: 140px;">Another Attempt</th>
                        <?php } ?>
                        <?php if ($this->isAllowed($role, 'Certification\Controller\PracticalExamController', 'delete')) { ?>
                            <th>Delete</th>
                        <?php } ?>
                    </tr>

                </thead>
                <tbody>
                    <tr>
                        <td colspan="7" class="dataTables_empty">Loading data from server</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

</div>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDhZa4hDifE6p2sbaxJehS7gcrZOJScIqM&libraries=drawing,geometry,places"></script>
<script src="<?php echo $this->basePath('assets/js/maplace.min.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/lib/select2/js/select2.min.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/highcharts.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/highcharts-more.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/pattern-fill.js'); ?>"></script>
<script type="text/javascript" src="<?php echo $this->basePath('assets/js/jquery.dataTables.min.js'); ?>"></script>
<script type="text/javascript" src="<?php echo $this->basePath('assets/js/jquery.blockUI.min.js'); ?>"></script>
<script type="text/javascript" src="<?php echo $this->basePath('assets/js/dataTables.bootstrap.min.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/daterangepicker.js'); ?>" type="text/javascript"></script>
<script type="text/javascript">
    var nombre = '<?php echo $nombre; ?>';
    var id = '<?php echo (isset($provider['id'])) ? $provider['id'] : ''; ?>';
    var name = '<?php echo (isset($provider['name'])) ? $provider['name'] : ''; ?>';
</script>
<script src="<?php echo $this->basePath('assets/js/personnel_certification/practical.js'); ?>" type="text/javascript"></script>

<script type="text/javascript">
    var writtenExamTable = null;
    let searchExecuted = false;
    $(document).ready(function() {
        $("#Tester").select2();
        // $("#TrainingId").select2();
    });

    function showAttempt(str) {
        if (str == "") {
            document.getElementById("Type of Exam").innerHTML = "";
            return;
        } else {
            if (window.XMLHttpRequest) {
                // code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
            } else {
                // code for IE6, IE5
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    var responseArray = this.responseText.split('##');
                    if (responseArray.length > 1) {
                        $('#alertMsg').html('<span>Last Certificate for <strong>' + responseArray[1] + '</strong> was issued on ' + responseArray[2] + '. You can do re-certification only after ' + responseArray[3] + ' or before ' + responseArray[4] + '</span>');
                        document.getElementById("Type of Exam").innerHTML = "";
                    } else {
                        $('#alertMsg').html('');
                        document.getElementById("Type of Exam").innerHTML = this.responseText;
                        if (document.getElementById("Type of Exam").value >= 4) {
                            alert('This tester has already made three unsuccessful attempts');
                            window.location = '<?php echo $this->url('practical-exam', array('action' => 'index')); ?>';
                        }
                    }

                }
            };
            xmlhttp.open("GET", "<?php echo $this->url('practical-exam', array('action' => 'attempt')); ?>?q=" + str, true);
            xmlhttp.send();
        }
    }

    $(document).ready(function() {
        <?php if (isset($written) && (int)$written > 0) { ?>
            showAttempt('<?php echo $provider['id']; ?>');
        <?php } ?>
        practicalExamTable = $('#practicalExamsTable').DataTable({
			"bProcessing": true,
			"bServerSide": true,
            "autoWidth": true,
            "aoColumns": [
                <?php echo $editAction; ?>
            ],
            "order": [
                [0, 'asc']
            ],
			"sAjaxSource": "<?php echo $this->url('practical-exam', array('action' => 'index')); ?>",
			"fnServerData": function(sSource, aoData, fnCallback) {
                aoData.push({
                    "name": "display",
                    "value": $("#display").val()
                });
				$.ajax({
					"dataType": 'json',
					"type": "POST",
					"url": sSource,
					"data": aoData,
					"success": fnCallback
				});
			}
		});
    });
    function searchRequestData(){
        searchExecuted = true;
        $.blockUI();
        practicalExamTable.draw();
        $.unblockUI();
    }
</script>
