<?php
use Laminas\Session\Container;
$sessionLogin = new Container('credo');
?>
<link rel="stylesheet" type="text/css" href="<?php echo $this->basePath('assets/lib/select2/css/select2.min.css'); ?>"/>
<link rel="stylesheet" type="text/css" href="<?php echo $this->basePath('assets/css/dataTables.bootstrap.min.css'); ?>"/>
<link rel="stylesheet" href="<?php echo $this->basePath('assets/css/daterangepicker-bs3.css'); ?>" type="text/css"/>

<link rel="stylesheet" href="<?php echo $this->basePath('assets/css/jquery.multiselect.css'); ?>" type="text/css"/>
<link rel="stylesheet" href="<?php echo $this->basePath('assets/css/jquery-ui.css'); ?>" type="text/css"/>

<script src="<?php echo $this->basePath('assets/js/jquery-1.12.4.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/jquery-ui.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/jquery.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/jquery-ui.min.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/jquery.multiselect.js'); ?>" type="text/javascript"></script>

<div class="am-content">

    <div class="page-head">

        <div class="row">
            <div class="col-sm-8">
                <h2>Edit Written Exam</h2>
                <div class="row">
                    <span class="muted pull-right" style="font-size:15px;"><span class="mandatory">*</span> indicates required field</span>
                </div>
                <div class="row">
                    <span class="muted pull-right" style="font-size:15px; "><span class="mandatory" style="color: green;">*</span> indicates read only field</span>
                </div>
            </div>
        </div>
    </div>

    <div class="main-content">
        <div class="widget widget-fullwidth widget-small" style="padding:5px; height: 800px">
            <form action="<?php $this->url('written-exam', array('action' => 'edit', 'id_written_exam' => $this->id_written_exam)); ?>" name="form" method="post" onsubmit="return validateForm()">
                <?php
                $form->prepare();
                $form->get('exam_type')->setAttributes([
                    'class' => 'form-control',
                    'placeholder' => 'Type of Exam',
                    'options' => [$attemptNumber => $attemptNumber],
                    'id' => 'Type of Exam',
                    'onclick' => 'emptyInput(this)'
                ]);

               

                    $form->get('provider_id')->setAttributes([
                        'class' => 'form-control',
                        'id' => 'Tester',
                        'onclick' => 'emptyInput(this)',
                        'options'=>[$this->provider_id => $this->provider_name],
                    ]);
                


                $form->get('exam_admin')->setAttributes([
                    'class' => 'form-control',
                    'placeholder' => 'Exam Admin By',
                    'autocomplete' => 'off',
                    'id' => 'Exam Admin By',
                    'onclick' => 'emptyInput(this)'
                ]);
                $form->get('date')->setAttributes([
                    'class' => 'form-control',
                    'placeholder' => 'Please select a Date',
                    'autocomplete' => 'off',
                    'id' => 'date',
                    'onclick' => 'emptyInput(this)'
                ]);
                $form->get('qa_point')->setAttributes([
                    'class' => 'form-control isRequired isNumericBetween_0_3',
                    'id' => 'QA',
                    'placeholder' => 'must be a valid number between 0 and 3',
                    'title' => 'must be a valid number between 0 and 3',
                    'autocomplete' => 'off',
                    'onclick' => 'emptyInput(this)'
                ]);
                $form->get('rt_point')->setAttributes([
                    'class' => 'form-control isRequired isNumericBetween_0_3',
                    'id' => 'RT',
                    'placeholder' => 'must be a valid number between 0 and 3',
                    'title' => 'must be a valid number between 0 and 3',
                    'autocomplete' => 'off',
                    'onclick' => 'emptyInput(this)'
                ]);
                $form->get('safety_point')->setAttributes([
                    'class' => 'form-control isRequired isNumericBetween_0_3',
                    'id' => 'Safety',
                    'placeholder' => 'must be a valid number between 0 and 3',
                    'title' => 'must be a valid number between 0 and 3',
                    'autocomplete' => 'off',
                    'onclick' => 'emptyInput(this)'
                ]);

                $form->get('specimen_point')->setAttributes([
                    'class' => 'form-control isRequired isNumericBetween_0_2',
                    'id' => 'Specimen',
                    'title' => 'must be a valid number between 0 and 2',
                    'placeholder' => 'must be a valid number between 0 and 2',
                    'autocomplete' => 'off',
                    'onclick' => 'emptyInput(this)'
                ]);
                $form->get('testing_algo_point')->setAttributes([
                    'class' => 'form-control isRequired isNumericBetween_0_3',
                    'id' => 'Testing Algo',
                    'title' => 'must be a valid number between 0 and 3',
                    'placeholder' => 'must be a valid number between 0 and 3',
                    'autocomplete' => 'off',
                    'onclick' => 'emptyInput(this)'
                ]);
                $form->get('report_keeping_point')->setAttributes([
                    'class' => 'form-control isRequired isNumericBetween_0_3',
                    'id' => 'Report Keeping',
                    'title' => 'must be a valid number between 0 and 3',
                    'placeholder' => 'must be a valid number between 0 and 3',
                    'autocomplete' => 'off',
                    'onclick' => 'emptyInput(this)'
                ]);
                $form->get('EQA_PT_points')->setAttributes([
                    'class' => 'form-control isRequired isNumericBetween_0_4',
                    'id' => 'EQA_PT',
                    'title' => 'must be a valid number between 0 and 4',
                    'placeholder' => 'must be a valid number between 0 and 4',
                    'autocomplete' => 'off',
                    'onclick' => 'emptyInput(this)'
                ]);
                $form->get('ethics_point')->setAttributes([
                    'class' => 'form-control isRequired isNumericBetween_0_2',
                    'id' => 'Ethics',
                    'title' => 'must be a valid number between 0 and 2',
                    'placeholder' => 'must be a valid number between 0 and 2',
                    'autocomplete' => 'off',
                    'onclick' => 'emptyInput(this)'
                ]);
                $form->get('inventory_point')->setAttributes([
                    'class' => 'form-control isRequired isNumericBetween_0_2',
                    'id' => 'Inventory',
                    'title' => 'must be a valid number between 0 and 2',
                    'placeholder' => 'must be a valid number between 0 and 2',
                    'autocomplete' => 'off',
                    'onclick' => 'emptyInput(this)'
                ]);

                // $form->get('training_id')->setAttributes([
                //     'class' => 'form-control',
                //     'id' => 'TrainingId',
                //     'onclick' => 'emptyInput(this)',
                //     'options'=>[$this->training_id => $this->training_name],
                // ]);


                $form->get('training_id')->setAttributes([
                    'class' => 'form-control',
                    'id' => 'TrainingId',
                    'onclick' => 'emptyInput(this)',
                ]);

                $form->get('practical')->setAttributes([
                    'value' => $this->practical,
                ]);

                echo $this->form()->openTag($form);
                ?>
                <?php echo $this->formHidden($form->get('id_written_exam')->setAttribute('class', 'form-control')) ?>
                
                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('provider_id')); ?><span class="mandatory" style="color: green;">*</span>
                    <?= $this->formElement($form->get('provider_id')); ?>
                    <?php // $this->formElementErrors($form->get('provider_id')); ?>
                </div>
                <div class="form-group col-lg-6"> 
                    <?= $this->formLabel($form->get('exam_type')); ?><span class="mandatory" style="color: green;">*</span>
                    <?= $this->formElement($form->get('exam_type')); ?>
                    <?php // $this->formElementErrors($form->get('exam_type')); ?>
                </div>
                
                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('exam_admin')); ?><span class="mandatory">*</span>
                    <?= $this->formElement($form->get('exam_admin')); ?>
                    <?php // $this->formElementErrors($form->get('exam_admin')); ?>
                </div>
                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('date')); ?><span class="mandatory">*</span>
                    <?= $this->formElement($form->get('date')); ?>
                    <?php // $this->formElementErrors($form->get('date')); ?>
                </div>
                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('qa_point')); ?><span class="mandatory">*</span>
                    <?= $this->formElement($form->get('qa_point')); ?>
                    <?php // $this->formElementErrors($form->get('qa_point')); ?>
                </div>
                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('rt_point')); ?><span class="mandatory">*</span>
                    <?= $this->formElement($form->get('rt_point')); ?>
                    <?php // $this->formElementErrors($form->get('rt_point')); ?> </div>
                <div class="form-group col-lg-6">  
                    <?= $this->formLabel($form->get('safety_point')); ?><span class="mandatory">*</span>
                    <?= $this->formElement($form->get('safety_point')); ?>
                    <?php // $this->formElementErrors($form->get('safety_point')); ?>
                </div>

                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('specimen_point')); ?><span class="mandatory">*</span>
                    <?= $this->formElement($form->get('specimen_point')); ?>
                    <?php // $this->formElementErrors($form->get('specimen_point')); ?>       
                </div>
                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('testing_algo_point')); ?><span class="mandatory">*</span>
                    <?= $this->formElement($form->get('testing_algo_point')); ?>
                    <?php // $this->formElementErrors($form->get('testing_algo_point')); ?>
                </div>
                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('report_keeping_point')); ?><span class="mandatory">*</span>
                    <?= $this->formElement($form->get('report_keeping_point')); ?>
                    <?php // $this->formElementErrors($form->get('report_keeping_point')); ?>
                </div>
                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('EQA_PT_points')); ?><span class="mandatory">*</span>
                    <?= $this->formElement($form->get('EQA_PT_points')); ?>
                    <?php // $this->formElementErrors($form->get('EQA_PT_points')); ?>
                </div>
                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('ethics_point')); ?><span class="mandatory">*</span>
                    <?= $this->formElement($form->get('ethics_point')); ?>
                    <?php // $this->formElementErrors($form->get('ethics_point')); ?>
                </div>

                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('inventory_point')); ?><span class="mandatory">*</span>
                    <?= $this->formElement($form->get('inventory_point')); ?>
                    <?php // $this->formElementErrors($form->get('inventory_point')); ?>
                </div>
                <div class="form-group col-lg-6">
                    <?= $this->formLabel($form->get('training_id')); ?>
                    <?= $this->formElement($form->get('training_id')); ?>
                    <?php // $this->formElementErrors($form->get('training_id')); ?>
                </div>
                <?php echo $this->formHidden($form->get('practical')) ?>

                <div class="row col-sm-3" style="margin-top: 30px; margin-left: 5px" >
                    <?php echo $this->formSubmit($form->get('submit')->setAttribute('class', 'btn  btn-space btn-primary')); ?>
                    <a class="btn  btn-space btn-default" role="button" href="<?php echo $this->url('written-exam', array('action' => 'index')); ?>" >CANCEL</a> </div>
                    <?php
                    echo $this->form()->closeTag();
                    ?>

            </form>
        </div>
    </div>
</div>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDhZa4hDifE6p2sbaxJehS7gcrZOJScIqM&libraries=drawing,geometry,places"></script>

<script src="<?php echo $this->basePath('assets/js/maplace.min.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/lib/select2/js/select2.min.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/js/highcharts.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/highcharts-more.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/pattern-fill.js'); ?>"></script>

<script type="text/javascript" src="<?php echo $this->basePath('assets/js/jquery.dataTables.min.js'); ?>"></script>
<script type="text/javascript" src="<?php echo $this->basePath('assets/js/dataTables.bootstrap.min.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/daterangepicker.js'); ?>" type="text/javascript"></script>
<script type="text/javascript">
    var nombre = '<?php echo $attemptNumber; ?>';
    var id = '<?php echo (isset($provider_id))?$provider_id:''; ?>';
    var name = '<?php echo (isset($provider_name))?$provider_name:''; ?>';
</script>
<script src="<?php echo $this->basePath('assets/js/personnel_certification/written.js'); ?>" type="text/javascript"></script>