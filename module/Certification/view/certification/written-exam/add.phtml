<?php

use Zend\Session\Container;

$sessionLogin = new Container('credo');

$sessionLogin = new Container('credo');
$role = $sessionLogin->roleCode;
$acl = $this->layout()->acl;
?>
<html>


    <link rel="stylesheet" type="text/css" href="<?php echo $this->basePath('assets/lib/select2/css/select2.min.css'); ?>"/>
    <link rel="stylesheet" type="text/css" href="<?php echo $this->basePath('assets/css/dataTables.bootstrap.min.css'); ?>"/>
    <link rel="stylesheet" href="<?php echo $this->basePath('assets/css/daterangepicker-bs3.css'); ?>" type="text/css"/>

    <link rel="stylesheet" href="<?php echo $this->basePath('assets/css/jquery.multiselect.css'); ?>" type="text/css"/>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script src="<?php echo $this->basePath('assets/js/jquery.js'); ?>" type="text/javascript"></script>
    <script src="<?php echo $this->basePath('assets/js/jquery-ui.min.js'); ?>" type="text/javascript"></script>
    <script src="<?php echo $this->basePath('assets/js/jquery.multiselect.js'); ?>" type="text/javascript"></script>

    <div class="am-content">
        <div class="page-head">
            <div class="row">
                <div class="col-sm-8">
                    <h1>Written Exam</h1>
                </div>
                <div class="col-sm-4 ">
                    <?php // if ($acl->isAllowed($role, 'Application\Controller\Facility', 'add')) {  ?>
                    <a href="<?php echo $this->url('written-exam', array('action' => 'index')); ?>" class="btn btn-success pull-right" style="margin-left: 5px;"><i class="fa fa-list"></i>&nbsp;List of Writtens Exams</a>
                    <?php // }  ?>

                </div>
            </div>
            <div class="row">
                <span class="muted pull-right" style="font-size:15px;">
                <span class="mandatory">*</span> indicates required field
                &nbsp;&nbsp;&nbsp;&nbsp;
                <span class="mandatory" style="color: green;">*</span> indicates read only field
                </span>
            </div>
        </div>

        <div class="main-content">
            <div class="widget widget-fullwidth widget-small" style="padding:5px; height: 800px ;  ">

                <form action="<?php $this->url('written-exam', array('action' => 'add')); ?>" name="form" method="post" onsubmit="return validateForm()">
                    <?php
                    $form->prepare();
                    $form->get('exam_type')->setAttributes([
                        'class' => 'form-control',
                        'placeholder' => 'Type of Exam',
                        'id' => 'Type of Exam',
                        'onclick' => 'emptyInput(this)'
                    ]);
//                   
                    $form->get('provider_id')->setAttributes([
                        'class' => 'form-control',
                        'id' => 'Tester',
                        'onclick' => 'emptyInput(this)',
                        'onchange' => 'showAttempt(this.value)'
                    ]);

                    $form->get('exam_admin')->setAttributes([
                        'class' => 'form-control',
                        'placeholder' => 'Exam Admin By',
                        'autocomplete' => 'off',
                        'id' => 'Exam Admin By',
                        'onclick' => 'emptyInput(this)'
                    ]);
                    $form->get('date')->setAttributes([
                        'class' => 'form-control',
                        'placeholder' => 'Please select a Date',
                        'autocomplete' => 'off',
                        'id' => 'date',
                        'onclick' => 'emptyInput(this)'
                    ]);
                    $form->get('qa_point')->setAttributes([
                        'class' => 'form-control',
                        'placeholder' => 'must be a valid number between 0 and 3',
                        'id' => 'QA',
                        'autocomplete' => 'off',
                        'onclick' => 'emptyInput(this)'
                    ]);
                    $form->get('rt_point')->setAttributes([
                        'class' => 'form-control',
                        'id' => 'RT',
                        'placeholder' => 'must be a valid number between 0 and 3',
                        'autocomplete' => 'off',
                        'onclick' => 'emptyInput(this)'
                    ]);
                    $form->get('safety_point')->setAttributes([
                        'class' => 'form-control',
                        'id' => 'Safety',
                        'placeholder' => 'must be a valid number between 0 and 3',
                        'autocomplete' => 'off',
                        'onclick' => 'emptyInput(this)'
                    ]);

                    $form->get('specimen_point')->setAttributes([
                        'class' => 'form-control',
                        'id' => 'Specimen',
                        'placeholder' => 'must be a valid number between 0 and 2',
                        'autocomplete' => 'off',
                        'onclick' => 'emptyInput(this)'
                    ]);
                    $form->get('testing_algo_point')->setAttributes([
                        'class' => 'form-control',
                        'id' => 'Testing Algo',
                        'placeholder' => 'must be a valid number between 0 and 3',
                        'autocomplete' => 'off',
                        'onclick' => 'emptyInput(this)'
                    ]);
                    $form->get('report_keeping_point')->setAttributes([
                        'class' => 'form-control',
                        'id' => 'Report Keeping',
                        'placeholder' => 'must be a valid number between 0 and 3',
                        'autocomplete' => 'off',
                        'onclick' => 'emptyInput(this)'
                    ]);
                    $form->get('EQA_PT_points')->setAttributes([
                        'class' => 'form-control',
                        'id' => 'EQA_PT',
                        'placeholder' => 'must be a valid number between 0 and 4',
                        'autocomplete' => 'off',
                        'onclick' => 'emptyInput(this)'
                    ]);
                    $form->get('ethics_point')->setAttributes([
                        'class' => 'form-control',
                        'id' => 'Ethics',
                        'placeholder' => 'must be a valid number between 0 and 2',
                        'autocomplete' => 'off',
                        'onclick' => 'emptyInput(this)'
                    ]);
                    $form->get('inventory_point')->setAttributes([
                        'class' => 'form-control',
                        'id' => 'Inventory',
                        'placeholder' => 'must be a valid number between 0 and 2',
                        'autocomplete' => 'off',
                        'onclick' => 'emptyInput(this)'
                    ]);

                    $form->get('practical')->setAttributes([
                        'value' => $this->practical,
                    ]);

                    echo $this->form()->openTag($form);
                    ?>
                    <?php echo $this->formHidden($form->get('id_written_exam')->setAttribute('class', 'form-control')) ?>
                    <div class="form-group col-lg-6">
                        <?= $this->formLabel($form->get('provider_id')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('provider_id')); ?>
                        <?= $this->formElementErrors($form->get('provider_id')); ?>
                    </div>
                    <div class="form-group col-lg-6"> 
                        <?= $this->formLabel($form->get('exam_type')); ?><span class="mandatory" style="color: green;">*</span>
                        <?= $this->formElement($form->get('exam_type')); ?>
                        <?= $this->formElementErrors($form->get('exam_type')); ?>
                    </div>

                    <div class="form-group col-lg-6">
                        <?= $this->formLabel($form->get('exam_admin')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('exam_admin')); ?>
                        <?= $this->formElementErrors($form->get('exam_admin')); ?>
                    </div>
                    <div class="form-group col-lg-6">
                        <?= $this->formLabel($form->get('date')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('date')); ?>
                        <?= $this->formElementErrors($form->get('date')); ?>
                    </div>
                    <div class="form-group col-lg-6">
                        <?= $this->formLabel($form->get('qa_point')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('qa_point')); ?>
                        <?= $this->formElementErrors($form->get('qa_point')); ?>
                    </div>
                    <div class="form-group col-lg-6">
                        <?= $this->formLabel($form->get('rt_point')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('rt_point')); ?>
                        <?= $this->formElementErrors($form->get('rt_point')); ?> </div>
                    <div class="form-group col-lg-6">  
                        <?= $this->formLabel($form->get('safety_point')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('safety_point')); ?>
                        <?= $this->formElementErrors($form->get('safety_point')); ?>
                    </div>

                    <div class="form-group col-lg-6">
                        <?= $this->formLabel($form->get('specimen_point')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('specimen_point')); ?>
                        <?= $this->formElementErrors($form->get('specimen_point')); ?>       
                    </div>
                    <div class="form-group col-lg-6">
                        <?= $this->formLabel($form->get('testing_algo_point')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('testing_algo_point')); ?>
                        <?= $this->formElementErrors($form->get('testing_algo_point')); ?>
                    </div>
                    <div class="form-group col-lg-6">
                        <?= $this->formLabel($form->get('report_keeping_point')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('report_keeping_point')); ?>
                        <?= $this->formElementErrors($form->get('report_keeping_point')); ?>
                    </div>
                    <div class="form-group col-lg-6">
                        <?= $this->formLabel($form->get('EQA_PT_points')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('EQA_PT_points')); ?>
                        <?= $this->formElementErrors($form->get('EQA_PT_points')); ?>
                    </div>
                    <div class="form-group col-lg-6">
                        <?= $this->formLabel($form->get('ethics_point')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('ethics_point')); ?>
                        <?= $this->formElementErrors($form->get('ethics_point')); ?>
                    </div>

                    <div class="form-group col-lg-6">
                        <?= $this->formLabel($form->get('inventory_point')); ?><span class="mandatory">*</span>
                        <?= $this->formElement($form->get('inventory_point')); ?>
                        <?= $this->formElementErrors($form->get('inventory_point')); ?>
                    </div>

                    <?php echo $this->formHidden($form->get('practical')) ?>

                    <div class="row col-sm-3" style="margin-top: 30px; margin-left: 5px" >
                        <?php echo $this->formSubmit($form->get('submit')->setAttribute('class', 'btn  btn-space btn-primary')); ?>
                        <a class="btn  btn-space btn-default" role="button" href="<?php echo $this->url('written-exam', array('action' => 'index')); ?>" >CANCEL</a> </div>
                        <?php
                        echo $this->form()->closeTag();
                        ?>
                </form>

            </div>
            <div class="widget widget-fullwidth widget-small" style="padding:20px;padding-top:70px; ">
            <h1>Written Exams </h1>
            <br>
            <table id="writtenExamTable" class="datatables table table-bordered table-condensed table-striped table-hover table-fw-widget" >
                <thead>
                    <tr>

                        <th style="width: 8%">Tester </th>
                        <th>No. of Attempts </th>
                        <th style="width: 10%" >Exam Administered by </th>
                        <th style="width: 8%">Date </th>
                        <th style="width: 5%">1.<br> QA (points)<br><br> </th>
                        <th style="width: 5%">2. <br>RT (points) <br><br></th>
                        <th style="width: 5%">3.<br> Safety (points) <br><br></th>
                        <th style="width: 5%">4.<br> Specimen Collection (points) </th>
                        <th style="width: 5%">5.<br> Testing Algorithm (points) <br></th>
                        <th style="width: 5%">6.<br> Record Keeping (points)</th>
                        <th style="width: 5%">7.<br> EQA/PT (points)<br><br></th>
                        <th style="width: 5%">8.<br> Ethics (points)<br><br> </th>
                        <th style="width: 5%">9.<br> Inventory (points)<br><br> </th>
                        <th style="width: 5%">Total Points (=25)</th>
                        <th style="width: 5%"> Final Score (≥80%)</th>


                        <?php if ($acl->isAllowed($role, 'Certification\Controller\WrittenExam', 'edit')) {  ?>
                        <th>Edit</th>
                        <th>Another Attempt</th>
                        <?php }  ?>
                        <?php if ($acl->isAllowed($role, 'Certification\Controller\WrittenExam', 'delete')) { ?>
                            <th>Delete</th>
                        <?php } ?>

                    </tr>

                </thead>
                <tbody>
                    <?php foreach ($this->writtens as $written) : ?>
                    <tr>
                        

                            <td><?php echo $this->escapeHtml($written->last_name . ' ' . $written->first_name . ' ' . $written->middle_name); ?></td>
                            <td><?php echo $this->escapeHtml($written->exam_type); ?></td>
                            <td><?php echo $this->escapeHtml($written->exam_admin); ?></td>
                            <td><?php echo date("d-m-Y", strtotime($this->escapeHtml($written->date))); ?></div></td>
                            <td><?php echo $this->escapeHtml($written->qa_point); ?></td>
                            <td><?php echo $this->escapeHtml($written->rt_point); ?></td>
                            <td><?php echo $this->escapeHtml($written->safety_point); ?></td>
                            <td><?php echo $this->escapeHtml($written->specimen_point); ?></td>
                            <td><?php echo $this->escapeHtml($written->testing_algo_point); ?></td>
                            <td><?php echo $this->escapeHtml($written->report_keeping_point); ?></td>
                            <td><?php echo $this->escapeHtml($written->EQA_PT_points); ?></td>
                            <td><?php echo $this->escapeHtml($written->ethics_point); ?></td>
                            <td><?php echo $this->escapeHtml($written->inventory_point); ?></td>
                            <td><?php echo $this->escapeHtml($written->total_points); ?></td>
                            <td><?php echo $this->escapeHtml($written->final_score . ' %'); ?></td>
                           <?php if ($acl->isAllowed($role, 'Certification\Controller\WrittenExam', 'edit')) {  ?>
                        <td>
                                <div style="width:80px;height:40px;overflow:auto;"><a href="<?php echo $this->url('written-exam', array('action' => 'edit', 'id_written_exam' => base64_encode($written->id_written_exam))); ?>"><span class="glyphicon glyphicon-pencil"></span> Edit</a> </div>
                            </td>

                            <?php
                            if ($written->final_score < 80 || strcasecmp($written->exam_type, '3rd attempt') == 0) {
                                echo "<td><span class='glyphicon glyphicon-repeat'></span> Add practical exam</td>";
                            } else {
                                echo "<td><a href=" . $this->url('practical-exam', array('action' => 'add'), array('query' => array(base64_encode('id_written_exam') => base64_encode($written->id_written_exam)))) . "><span class='glyphicon glyphicon-repeat'></span> Add practical exam</a></td>";
                            }
                            ?>
                        <?php }  ?>
                            
                            <?php if ($acl->isAllowed($role, 'Certification\Controller\WrittenExam', 'delete')) { ?>
                                <td>
                                         <a onclick="if (!confirm('Do you really want to remove this written exam?')) {
                                                    alert('Canceled!');
                                                    return false;};"  href="<?php echo $this->url('written-exam', array('action' => 'delete', 'id_written_exam' => base64_encode($written->id_written_exam))); ?>"> <span class="glyphicon glyphicon-trash"> Delete</span></a> 
                                  
                                </td>
                            <?php } ?>
                            
                            
</tr>


                    <?php endforeach; ?>
                </tbody>
            </table>            
        </div>
        </div>
    </div>
</html>


<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDhZa4hDifE6p2sbaxJehS7gcrZOJScIqM&libraries=drawing,geometry,places"></script>

<script src="<?php echo $this->basePath('assets/js/maplace.min.js'); ?>" type="text/javascript"></script>
<script src="<?php echo $this->basePath('assets/lib/select2/js/select2.min.js'); ?>" type="text/javascript"></script>


<script src="<?php echo $this->basePath('assets/js/highcharts.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/highcharts-more.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/pattern-fill.js'); ?>"></script>

<script type="text/javascript" src="<?php echo $this->basePath('assets/js/jquery.dataTables.min.js'); ?>"></script>
<script type="text/javascript" src="<?php echo $this->basePath('assets/js/dataTables.bootstrap.min.js'); ?>"></script>
<script src="<?php echo $this->basePath('assets/js/daterangepicker.js'); ?>" type="text/javascript"></script>
<script type="text/javascript">
                    var nombre = '<?PHP echo $nombre; ?>';
                    var id = '<?PHP echo $provider['id']; ?>';
                    var name = '<?PHP echo $provider['name']; ?>';
</script>


<script src="<?php echo $this->basePath('assets/js/personnel_certification/written.js'); ?>" type="text/javascript"></script>



<script type="text/javascript" >

                    function showAttempt(str) {

                        if (str == "") {
                            document.getElementById("Type of Exam").innerHTML = "";
                            return;
                        } else {
                            if (window.XMLHttpRequest) {
                                // code for IE7+, Firefox, Chrome, Opera, Safari
                                xmlhttp = new XMLHttpRequest();
                            } else {
                                // code for IE6, IE5
                                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
                            }
                            xmlhttp.onreadystatechange = function () {
                                if (this.readyState == 4 && this.status == 200) {
                                    document.getElementById("Type of Exam").innerHTML = this.responseText;
                                }

                                if (document.getElementById("Type of Exam").value >= 4) {
                                    alert('This tester has already made three unsuccessful attempts');
                                    window.location = '<?php echo $this->url('practical-exam', array('action' => 'index')); ?>';
                                }

                            };
//                            alert(str);
                            xmlhttp.open("GET", "<?php echo $this->url('written-exam', array('action' => 'attempt')); ?>?q=" + str, true);
                            xmlhttp.send();
                        }
                    }

                    $(document).ready(function () {

$('#writtenExamTable').dataTable({
    "aProcessing": true,
    "aServerSide": true,
});
});

</script>


